// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_insh_send_sg
#define inlib_insh_send_sg

#include "ishell"
#include "../sg/gui_viewer"
#include "../sg/view_sg_client"

namespace inlib {

inline void insh_scene_send_sg(ishell& a_insh,const std::vector<std::string>&,sg::gui_viewer& a_gv,sg::node& a_sg) {
  sg::view_sg_client* _view_sg_client = safe_cast<sg::viewer,sg::view_sg_client>(a_gv);
  if(!_view_sg_client) {
    a_insh.warn("scene_send_sg : viewer is not a inlib::sg::view_sg_client.");
    return;
  }
  args opts;
  _view_sg_client->send_sg(a_sg,opts);
}

inline const std::string& insh_scene_send_static_help() {
  static const std::string s_help("\
scene_send_static: scene_send_static\n\
  Send static scene graph to a viewer.\n\
  A connection must be first established between the app and a viewer.\n\
");
  return s_help;
}

inline const std::string& insh_scene_send_dynamic_help() {
  static const std::string s_help("\
scene_send_dynamic: scene_send_dynamic\n\
  Send dynamic scene graph to a viewer.\n\
  A connection must be first established between the app and a viewer.\n\
");
  return s_help;
}

}


#endif
