#!/bin/sh -f

. ./find_bush

. ${bush_home}/args
. ${bush_home}/g4args

#if [ `uname` = Darwin ] ; then
#  if [ ${build_geant4_10x} = "yes" ] ; then
#    # to rm ld warning when linking ourex geant4 10.03.p01.  
#    build_macosx_target=10.12
#  fi
#fi

#//////////////////////////////////////
#/// specific args : //////////////////
#//////////////////////////////////////
build_use_lib=no
items="${build_args}"
build_args=
for item in ${items} ; do
  if [ ${item} = "-lib" ] ; then
    build_use_lib=yes
  else
    build_args="${build_args} ${item}"
  fi
done

#//////////////////////////////////////
#//////////////////////////////////////
#//////////////////////////////////////

. ${bush_home}/app_header_use

#//////////////////////////////////////////////////////
#//////////////////////////////////////////////////////
#//////////////////////////////////////////////////////
cppflags="${cppflags} -I../../MEMPHYS"

if [ ${build_sdk_android} = "yes" ] ; then
  cppflags="${cppflags} -DEXLIB_ANDROID_MAIN_DO_STD_EXIT"
fi

if [ ${build_visual} = "yes" ] ; then
  cppflags="${cppflags} -DNOMINMAX" #disconnect the cpp macros min,max in windows.h

  cppflags="${cppflags} -I../../MEMPHYS/MEMPHYS -I../../MEMPHYS/source" # to bypass include not found because of uppercase in app name.
fi

cppfiles="${cppfiles} ${inlib_home}/inlib/yacc/cexpr_lexer.cpp"
cppfiles="${cppfiles} ${inlib_home}/inlib/yacc/cexpr_eval.cpp"

#//////////////////////////////////////////////////////
#//////////////////////////////////////////////////////
#//////////////////////////////////////////////////////
if [ ${build_x11} = yes ] ; then
  cppflags="${cppflags} -DEXLIB_APP_HAS_TERM -DEXLIB_APP_TERM_INSH"
  use_Getline=yes
fi
if [ ${build_sdk_mac} = yes ] ; then
  cppflags="${cppflags} -DEXLIB_APP_HAS_TERM -DEXLIB_APP_TERM_INSH"
  use_Getline=yes
fi
if [ ${build_visual} = yes ] ; then
  cppflags="${cppflags} -DEXLIB_APP_HAS_TERM -DEXLIB_APP_TERM_INSH"
  use_Getline=yes
fi

#//////////////////////////////////////////////////////
#//////////////////////////////////////////////////////
#//////////////////////////////////////////////////////
cppflags="${cppflags} -DAPP_USE_INLIB_WROOT"

use_geant4=yes
use_zip=yes
use_csz=yes

. ./use_geant4

. ${bush_home}/use/Getline
. ${bush_home}/use/csz
. ${bush_home}/use/zip
. ${bush_home}/app_trailer_use

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////
use_lib_MEMPHYS=no
if [ ${build_use_lib} = yes ] ; then
  if [ ! -f "${build_path}/libMEMPHYS.a" ] ; then
    echo "build_app_vis : ${build_path}/libMEMPHYS.a not found."
    exit
  fi
  use_lib_MEMPHYS=yes
fi
  
#cppfiles="${cppfiles} ../MEMPHYS/opener"
#cppfiles="${cppfiles} ../MEMPHYS/background_popup"
#cppfiles="${cppfiles} ../MEMPHYS/main"

if [ ${use_lib_MEMPHYS} = yes ] ; then
  if [ ${build_visual} = "yes" ] ; then
    libs="${build_path}/libMEMPHYS.a ${libs}"
  else
    libs="-L${build_path} -lMEMPHYS ${libs}"
  fi
  
else
  sim_src="../../MEMPHYS/source"
  /bin/rm -f ./tmp_0
  find ${sim_src} -name '*.cpp' -print > ./tmp_0
  grep -v 'PhysicsList_' ./tmp_0 > ./tmp_1
  for file in $(cat ./tmp_1) ; do cppfiles="${cppfiles} ${file}";done
  /bin/rm -f ./tmp_0 ./tmp_1
fi

#//////////////////////////////////////////////////////
#//////////////////////////////////////////////////////
#//////////////////////////////////////////////////////

. ${bush_home}/app_trailer
